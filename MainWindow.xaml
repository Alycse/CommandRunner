<Window x:Class="CommandRunner.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CommandRunner"
        xmlns:helpers="clr-namespace:CommandRunner.Helpers"
        xmlns:vm="clr-namespace:CommandRunner.ViewModels"
        mc:Ignorable="d"
        Title="MainWindow" Height="730" Width="1280">

    <Window.Resources>
        <vm:MainWindowViewModel x:Key="MainViewModel"/>
        <helpers:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

        <ContextMenu x:Key="ContainerContextMenu">
            <MenuItem Header="New Command" Command="{Binding Source={StaticResource MainViewModel}, Path=NewCommandCommand}" CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
            <MenuItem Header="New Container" Command="{Binding Source={StaticResource MainViewModel}, Path=NewContainerCommand}" CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
            <Separator/>
            <MenuItem Header="Move" Command="{Binding Source={StaticResource MainViewModel}, Path=MoveCommand}" CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
            <MenuItem Header="Delete" Command="{Binding Source={StaticResource MainViewModel}, Path=DeleteCommand}" CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
        </ContextMenu>

        <ContextMenu x:Key="CommandContextMenu">
            <MenuItem Header="Queue" Command="{Binding Source={StaticResource MainViewModel}, Path=QueueCommand}"/>
            <Separator/>
            <MenuItem Header="Move" Command="{Binding Source={StaticResource MainViewModel}, Path=MoveCommand}"/>
            <MenuItem Header="Delete" Command="{Binding Source={StaticResource MainViewModel}, Path=DeleteCommand}"/>
        </ContextMenu>

        <ContextMenu x:Key="BackgroundContextMenu">
            <MenuItem Header="New Command" Command="{Binding Source={StaticResource MainViewModel}, Path=NewCommandCommand}"/>
            <MenuItem Header="New Container" Command="{Binding Source={StaticResource MainViewModel}, Path=NewContainerCommand}"/>
        </ContextMenu>

        <HierarchicalDataTemplate x:Key="ContainerTemplate" ItemsSource="{Binding Children}">
            <TextBlock Text="{Binding Name}" Foreground="LightBlue" FontWeight="Bold">
                <TextBlock.ContextMenu>
                    <StaticResource ResourceKey="ContainerContextMenu"/>
                </TextBlock.ContextMenu>
            </TextBlock>
        </HierarchicalDataTemplate>

        <DataTemplate x:Key="CommandTemplate">
            <TextBlock Text="{Binding Name}" Foreground="#FFCACACA">
                <TextBlock.ContextMenu>
                    <StaticResource ResourceKey="CommandContextMenu"/>
                </TextBlock.ContextMenu>
            </TextBlock>
        </DataTemplate>

        <helpers:SelectionListItemTemplateSelector
            x:Key="SelectionListItemTemplateSelector"
            ContainerTemplate="{StaticResource ContainerTemplate}"
            CommandTemplate="{StaticResource CommandTemplate}"/>
    </Window.Resources>

    <Window.DataContext>
        <vm:MainWindowViewModel/>
    </Window.DataContext>

    <Grid Background="#FF3C3C3C">
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <Border Grid.Column="0" Grid.Row="0" Margin="5" BorderThickness="2" Background="#FF323232">
            <TreeView ItemsSource="{Binding SelectionListItems}" 
                      Foreground="White" 
                      BorderThickness="0" 
                      Background="#FF323232"
                      ItemTemplateSelector="{StaticResource SelectionListItemTemplateSelector}"
                      SelectedItemChanged="TreeView_SelectedItemChanged">
                <TreeView.ContextMenu>
                    <StaticResource ResourceKey="BackgroundContextMenu"/>
                </TreeView.ContextMenu>
            </TreeView>
        </Border>

        <GridSplitter Grid.Column="1" Grid.Row="0" Width="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="#FF404040"/>

        <Border Grid.Column="2" Grid.Row="0" Margin="3" BorderThickness="2" Background="#FF323232">
            <StackPanel Margin="5" Visibility="{Binding IsItemSelected, Converter={StaticResource BooleanToVisibilityConverter}}">
                <StackPanel Margin="4">
                    <Label Content="Name" Foreground="Gainsboro"/>

                    <TextBox Text="{Binding TemporaryCommand.Name, UpdateSourceTrigger=PropertyChanged}" 
                             Background="#FF424242" 
                             Foreground="Gainsboro" 
                             Margin="5,0,2,0"
                             Visibility="{Binding IsCommandSelected, Converter={StaticResource BooleanToVisibilityConverter}}"/>

                    <TextBox Text="{Binding TemporaryContainer.Name, UpdateSourceTrigger=PropertyChanged}" 
                             Background="#FF424242" 
                             Foreground="Gainsboro" 
                             Margin="5,0,2,0"
                             Visibility="{Binding IsContainerSelected, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                </StackPanel>

                <StackPanel Margin="4" Visibility="{Binding IsCommandSelected, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Label Content="File Path" Foreground="Gainsboro"/>
                    <TextBox Text="{Binding TemporaryCommand.Command.FilePath, UpdateSourceTrigger=PropertyChanged}" 
                             Background="#FF424242" 
                             Foreground="Gainsboro" 
                             Margin="5,0,2,0"/>
                </StackPanel>

                <StackPanel Margin="4" Visibility="{Binding IsCommandSelected, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Label Content="Argument" Foreground="Gainsboro"/>
                    <TextBox Text="{Binding TemporaryCommand.Command.Argument, UpdateSourceTrigger=PropertyChanged}" 
                             Background="#FF424242" 
                             Foreground="Gainsboro" 
                             Margin="5,0,2,0"/>
                </StackPanel>

                <StackPanel Margin="4" Visibility="{Binding IsCommandSelected, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Label Content="Tags" Foreground="Gainsboro"/>
                    <TextBox Text="{Binding TemporaryCommand.Command.Tags, UpdateSourceTrigger=PropertyChanged}" 
                             Background="#FF424242" 
                             Foreground="Gainsboro" 
                             Margin="5,0,2,0"/>
                </StackPanel>

                <StackPanel Margin="4,14,0,0" Orientation="Horizontal" Visibility="{Binding IsCommandSelected, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <CheckBox IsChecked="{Binding TemporaryCommand.Command.CompleteUponExecution}" 
                              Margin="4,6,0,0"/>
                    <Label Content="Complete upon execution" Foreground="Gainsboro"/>
                </StackPanel>

                <StackPanel Margin="4,4,0,0" Orientation="Horizontal" Visibility="{Binding IsCommandSelected, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <CheckBox IsChecked="{Binding TemporaryCommand.Command.RemoveFromQueueUponCompletion}" 
                              Margin="4,6,0,0"/>
                    <Label Content="Remove from Queue after completion" Foreground="Gainsboro"/>
                </StackPanel>

                <StackPanel Margin="0,10,4,0" Orientation="Horizontal" HorizontalAlignment="Right">
                    <Button Padding="25,5,25,5" Background="#FF424242" Foreground="Gainsboro" Command="{Binding SaveCommand}" 
                            IsEnabled="{Binding IsCommandSelected or IsContainerSelected}">Save</Button>
                </StackPanel>
            </StackPanel>
        </Border>

        <GridSplitter Grid.Column="3" Grid.Row="0" Width="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="#FF404040"/>

        <Border Grid.Column="4" Grid.Row="0" Margin="3" BorderThickness="2" Background="#FF323232">
        </Border>

        <GridSplitter Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="5" Height="3" HorizontalAlignment="Stretch" VerticalAlignment="Center" Background="#FF404040"/>

        <Border Grid.Column="0" Grid.Row="2" Grid.ColumnSpan="2" Margin="3" BorderThickness="2" Background="#FF323232">
        </Border>

        <GridSplitter Grid.Column="1" Grid.Row="2" Width="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="#FF404040"/>

        <Border Grid.Column="2" Grid.Row="2" Grid.ColumnSpan="3" Margin="3" BorderThickness="2" Background="#FF323232">
        </Border>
    </Grid>
</Window>